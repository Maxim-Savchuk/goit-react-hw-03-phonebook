{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Container","styled","div","Form","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","contacts","find","contact","toLowerCase","alert","this","type","pattern","title","required","onChange","Component","Filter","filter","Item","li","ContactList","onDeleteContact","map","id","onClick","PhonebookTitle","h1","ContactsTitle","h2","App","addContact","shortid","generate","deleteContact","contactId","prevState","changeFilter","normalizedFilter","filterContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14b88717.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 320px;\r\n  height: auto;\r\n  padding: 20px 30px;\r\n  border: 2px solid grey;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 4px;\r\n  padding: 2px 7px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  margin-top: 7px;\r\n  &:focus {\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: 2px solid rgb(73, 167, 230);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 216px;\r\n  margin-top: 20px;\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(0, 0, 0, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n`;","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\n\r\nimport { Container, Form, Label, Input, Button } from './ContactForm.styled';\r\n\r\nexport class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { onSubmit, contacts } = this.props;\r\n        const { name, number } = this.state;\r\n        const duplicateName = contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase());\r\n\r\n        if (duplicateName) {\r\n            alert(`${name} is already in contacts`);\r\n            this.setState({ name: '', number: '', });\r\n            return;\r\n        }\r\n\r\n        onSubmit(name, number);\r\n        this.setState({ name: '', number: '', });\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Label>\r\n                        Name\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Label>\r\n                    <Label>\r\n                        Number\r\n                        <Input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Label>\r\n                    <Button type=\"submit\">Add contact</Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    contacts: PropTypes.array,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 200px;\r\n  border-radius: 4px;\r\n  padding: 2px 7px;\r\n  height: 20px;\r\n  border: 2px solid black;\r\n  margin-top: 7px;\r\n  &:focus {\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: 2px solid rgb(73, 167, 230);\r\n  }\r\n`;","import { Label, Input } from './Filter.styled';\r\n\r\nexport const Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <Label>\r\n            Filter contacts by name\r\n            <Input\r\n                type=\"text\"\r\n                value={filter}\r\n                onChange={onChange} />\r\n        </Label>\r\n    );\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  border: 2px solid grey;\r\n  border-radius: 4px;\r\n  width: 360px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 12px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 4px rgba(114, 81, 81, 0.16), 0px 1px 1px rgba(0, 0, 0, 0.12);\r\n`;","import PropTypes from 'prop-types';\r\n\r\nimport { Item, Button } from './ContactList.styled';\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {contacts.map(({ id, name, number }) => {\r\n                    return (\r\n                        <Item key={id}>\r\n                            {name}: {number}\r\n                            <Button\r\n                                type=\"button\"\r\n                                onClick={() => onDeleteContact(id)}\r\n                            >Delete</Button>\r\n                        </Item>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 50px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const PhonebookTitle = styled.h1`\r\n  font-size: 28px;\r\n`;\r\n\r\nexport const ContactsTitle = styled.h2`\r\n`;","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport { ContactForm } from 'components/ContactForm';\r\nimport { Filter } from 'components/Filter';\r\nimport { ContactList } from 'components/ContactList';\r\n\r\nimport { Container, PhonebookTitle, ContactsTitle } from './App.styled';\r\n\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }))\r\n  }\r\n\r\n  changeFilter = e => {\r\n    this.setState({\r\n      filter: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    const filterContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter));\r\n\r\n    return (\r\n      <Container>\r\n        <PhonebookTitle>Phonebook</PhonebookTitle>\r\n        <ContactForm\r\n          contacts={filterContacts}\r\n          onSubmit={this.addContact}\r\n        />\r\n\r\n        <ContactsTitle>Contacts</ContactsTitle>\r\n        <Filter filter={filter} onChange={this.changeFilter} />\r\n        <ContactList contacts={filterContacts} onDeleteContact={this.deleteContact} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}